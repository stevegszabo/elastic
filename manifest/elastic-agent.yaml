---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: elastic-agent
  namespace: elastic-01

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: elastic-agent
  namespace: elastic-01
subjects:
- kind: ServiceAccount
  name: elastic-agent
  namespace: elastic-01
roleRef:
  kind: Role
  name: elastic-agent
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: elastic-agent
subjects:
- kind: ServiceAccount
  name: elastic-agent
  namespace: elastic-01
roleRef:
  kind: ClusterRole
  name: elastic-agent
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: elastic-agent
  namespace: elastic-01
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs: ["get", "create", "update"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: elastic-agent
rules:
- apiGroups: [""]
  resources:
  - nodes
  - namespaces
  - events
  - pods
  - services
  - configmaps
  - serviceaccounts
  - persistentvolumes
  - persistentvolumeclaims
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get"]
- apiGroups: ["extensions"]
  resources: ["replicasets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["statefulsets", "deployments", "replicasets", "daemonsets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["nodes/stats"]
  verbs: ["get"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["clusterrolebindings", "clusterroles", "rolebindings", "roles"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["policy"]
  resources: ["podsecuritypolicies"]
  verbs: ["get", "list", "watch"]
- apiGroups: [ "storage.k8s.io" ]
  resources: ["storageclasses"]
  verbs: [ "get", "list", "watch" ]

---
apiVersion: agent.k8s.elastic.co/v1alpha1
kind: Agent
metadata:
  name: elastic-01
  namespace: elastic-01
spec:
  version: 9.1.2
  elasticsearchRefs:
  - name: elastic-01
  daemonSet:
    podTemplate:
      spec:
        automountServiceAccountToken: true
        serviceAccountName: elastic-agent
        hostPID: false
        volumes:
        - name: varlogcontainers
          hostPath:
            path: /var/log/containers
        - name: varlogpods
          hostPath:
            path: /var/log/pods
        containers:
        - name: agent
          securityContext:
            runAsUser: 0
          resources:
            requests:
              cpu: 1
              memory: 1Gi
            limits:
              cpu: 1
              memory: 1Gi
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          volumeMounts:
          - name: varlogcontainers
            mountPath: /var/log/containers
          - name: varlogpods
            mountPath: /var/log/pods
  config:
    agent:
      monitoring:
        enabled: true
        use_output: default
        logs: true
        metrics: true
    providers:
      kubernetes:
        node: ${NODE_NAME}
        scope: node
    inputs:

    - id: container-log-${kubernetes.pod.name}-${kubernetes.container.id}
      type: filestream
      use_output: default
      meta:
        package:
          name: kubernetes
          version: 1.80.2
      data_stream:
        namespace: default
      streams:
      - id: container-log-${kubernetes.pod.name}-${kubernetes.container.id}
        data_stream:
          dataset: kubernetes.container
          type: logs
        prospector.scanner.symlinks: true
        paths: ["/var/log/containers/*${kubernetes.container.id}.log"]

    - id: kubernetes/metrics
      type: kubernetes/metrics
      use_output: default
      meta:
        package:
          name: kubernetes
          version: 1.80.2
      data_stream:
        namespace: default
      streams:
      - id: kubernetes/metrics-kubernetes.state_node
        data_stream:
          dataset: kubernetes.state_node
          type: metrics
        metricsets:
        - state_node
        add_metadata: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        period: 10s
        hosts: ["local-kube-state-metrics.base-prometheus:8080"]
        ssl.verification_mode: none
      - id: kubernetes/metrics-kubernetes.state_pod
        data_stream:
          dataset: kubernetes.state_pod
          type: metrics
        metricsets:
        - state_pod
        add_metadata: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        period: 10s
        hosts: ["local-kube-state-metrics.base-prometheus:8080"]
        ssl.verification_mode: none
      - id: kubernetes/metrics-kubernetes.state_deployment
        data_stream:
          dataset: kubernetes.state_deployment
          type: metrics
        metricsets:
        - state_deployment
        add_metadata: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        period: 10s
        hosts: ["local-kube-state-metrics.base-prometheus:8080"]
        ssl.verification_mode: none
      - id: kubernetes/metrics-kubernetes.state_daemonset
        data_stream:
          dataset: kubernetes.state_daemonset
          type: metrics
        metricsets:
        - state_daemonset
        add_metadata: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        period: 10s
        hosts: ["local-kube-state-metrics.base-prometheus:8080"]
        ssl.verification_mode: none
      - id: kubernetes/metrics-kubernetes.state_replicaset
        data_stream:
          dataset: kubernetes.state_replicaset
          type: metrics
        metricsets:
        - state_replicaset
        add_metadata: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        period: 10s
        hosts: ["local-kube-state-metrics.base-prometheus:8080"]
        ssl.verification_mode: none
      - id: kubernetes/metrics-kubernetes.apiserver
        data_stream:
          dataset: kubernetes.apiserver
          type: metrics
        metricsets:
        - apiserver
        add_metadata: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        period: 30s
        hosts: ["https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}"]
        ssl.certificate_authorities: ["/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"]
      - id: kubernetes/metrics-kubernetes.system
        data_stream:
          dataset: kubernetes.system
          type: metrics
        metricsets:
        - system
        add_metadata: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        period: 10s
        hosts: ["https://192.168.2.14:10250"]
        ssl.verification_mode: none
      - id: kubernetes/metrics-kubernetes.event
        data_stream:
          dataset: kubernetes.event
          type: metrics
        metricsets:
        - event
        add_metadata: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        period: 10s
        hosts: ["https://192.168.2.14:10250"]
        ssl.verification_mode: none
      - id: kubernetes/metrics-kubernetes.node
        data_stream:
          dataset: kubernetes.node
          type: metrics
        metricsets:
        - node
        add_metadata: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        period: 10s
        hosts: ["https://192.168.2.14:10250"]
        ssl.verification_mode: none
      - id: kubernetes/metrics-kubernetes.pod
        data_stream:
          dataset: kubernetes.pod
          type: metrics
        metricsets:
        - pod
        add_metadata: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        period: 10s
        hosts: ["https://192.168.2.14:10250"]
        ssl.verification_mode: none
      - id: kubernetes/metrics-kubernetes.container
        data_stream:
          dataset: kubernetes.container
          type: metrics
        metricsets:
        - container
        add_metadata: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        period: 10s
        hosts: ["https://192.168.2.14:10250"]
        ssl.verification_mode: none
      - id: kubernetes/metrics-kubernetes.volume
        data_stream:
          dataset: kubernetes.volume
          type: metrics
        metricsets:
        - volume
        add_metadata: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        period: 10s
        hosts: ["https://192.168.2.14:10250"]
        ssl.verification_mode: none

    - id: system/metrics
      type: system/metrics
      use_output: default
      meta:
        package:
          name: system
          version: 2.5.3
      data_stream:
        namespace: default
      streams:
      - id: system/metrics-system.cpu
        data_stream:
          dataset: system.cpu
          type: metrics
        metricsets:
        - cpu
        cpu.metrics:
        - percentages
        - normalized_percentages
        period: 10s
      - id: system/metrics-system.diskio
        data_stream:
          dataset: system.diskio
          type: metrics
        metricsets:
        - diskio
        diskio.include_devices: null
        period: 10s
      - id: system/metrics-system.filesystem
        data_stream:
          dataset: system.filesystem
          type: metrics
        metricsets:
        - filesystem
        period: 1m
#        processors:
#        - drop_event.when.regexp:
#            system.filesystem.mount_point: ^/(sys|cgroup|proc|dev|etc|host|lib|snap)($|/)
      - id: system/metrics-system.fsstat
        data_stream:
          dataset: system.fsstat
          type: metrics
        metricsets:
        - fsstat
        period: 1m
#        processors:
#        - drop_event.when.regexp:
#            system.fsstat.mount_point: ^/(sys|cgroup|proc|dev|etc|host|lib|snap)($|/)
      - id: system/metrics-system.load
        data_stream:
          dataset: system.load
          type: metrics
        metricsets:
        - load
        period: 10s
      - id: system/metrics-system.memory
        data_stream:
          dataset: system.memory
          type: metrics
        metricsets:
        - memory
        period: 10s
      - id: system/metrics-system.network
        data_stream:
          dataset: system.network
          type: metrics
        metricsets:
        - network
        period: 10s
        network.interfaces: null
      - id: system/metrics-system.process
        data_stream:
          dataset: system.process
          type: metrics
        metricsets:
        - process
        period: 10s
        process.include_top_n.by_cpu: 5
        process.include_top_n.by_memory: 5
        process.cmdline.cache.enabled: true
        process.cgroups.enabled: false
        process.include_cpu_ticks: false
        processes: [".*"]
      - id: system/metrics-system.process_summary
        data_stream:
          dataset: system.process_summary
          type: metrics
        metricsets:
        - process_summary
        period: 10s
      - id: system/metrics-system.socket_summary
        data_stream:
          dataset: system.socket_summary
          type: metrics
        metricsets:
        - socket_summary
        period: 10s
      - id: system/metrics-system.uptime
        data_stream:
          dataset: system.uptime
          type: metrics
        metricsets:
        - uptime
        period: 10s
